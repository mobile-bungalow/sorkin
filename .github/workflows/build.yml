name: Build Sorkin Plugin

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  build-linux:
    name: Linux - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends clang libavcodec-dev libavformat-dev libavutil-dev libswscale-dev libavfilter-dev libavdevice-dev pkg-config
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Install Just
        uses: extractions/setup-just@v2
      - name: Build
        run: just bundle
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: sorkin-linux
          path: target/sorkin_addon/

  build-macos:
    name: macOS - build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          brew install ffmpeg pkg-config
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Install Just
        uses: extractions/setup-just@v2
      - name: Build
        run: just bundle
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: sorkin-macos
          path: target/sorkin_addon/

  build-windows:
    name: Windows - build
    runs-on: windows-latest
    env:
      FFMPEG_DOWNLOAD_URL: https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-full-shared.7z
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          $VCINSTALLDIR = $(& "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath)
          Add-Content $env:GITHUB_ENV "LIBCLANG_PATH=${VCINSTALLDIR}\VC\Tools\LLVM\x64\bin`n"
          Invoke-WebRequest "${env:FFMPEG_DOWNLOAD_URL}" -OutFile ffmpeg-release-full-shared.7z
          7z x ffmpeg-release-full-shared.7z
          mkdir ffmpeg
          mv ffmpeg-*/* ffmpeg/
          Add-Content $env:GITHUB_ENV "FFMPEG_DIR=${pwd}\ffmpeg`n"
          Add-Content $env:GITHUB_PATH "${pwd}\ffmpeg\bin`n"
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Install Just
        uses: extractions/setup-just@v2
      - name: Build
        run: just bundle
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: sorkin-windows
          path: target/sorkin_addon/

  release:
    if: github.event_name == 'release'
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create release archives
        run: |
          cd artifacts
          for platform in linux macos windows; do
            zip -r sorkin-${platform}.zip sorkin-${platform}/
          done
      - name: Upload to release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*.zip
          draft: false
          prerelease: false
